{"version":3,"sources":["components/context/index.js","components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/PlayersList.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["ScoreboardContext","React","createContext","Provider","state","players","name","score","id","prevPlayerId","handleScoreChange","index","delta","setState","prevState","updatedPlayers","updatedPlayer","handleAddPlayer","handleRemovePlayer","filter","p","getHighScore","scores","map","highScore","Math","max","value","this","actions","changeScore","removePlayer","addPlayer","isHighScore","props","children","Component","Consumer","Stats","totalPlayers","length","totalPoints","reduce","total","player","className","Stopwatch","isRunning","elapsedTime","previousTime","tick","now","Date","handleStopwatch","handleReset","intervalID","setInterval","clearInterval","seconds","floor","onClick","Header","defaultProps","title","Counter","Icon","viewBox","d","transform","width","height","Player","PureComponent","PlayerList","key","toString","AddPlayerForm","playerInput","createRef","onSubmit","e","preventDefault","current","currentTarget","reset","type","ref","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdc81c20.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst ScoreboardContext = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    players: [\r\n      {\r\n        name: \"Guil\",\r\n        score: 0,\r\n        id: 1\r\n      },\r\n      {\r\n        name: \"Treasure\",\r\n        score: 0,\r\n        id: 2\r\n      },\r\n      {\r\n        name: \"Ashley\",\r\n        score: 0,\r\n        id: 3\r\n      },\r\n      {\r\n        name: \"James\",\r\n        score: 0,\r\n        id: 4\r\n      }\r\n    ]\r\n  };\r\n\r\n  // player id counter\r\n  prevPlayerId = 4;\r\n\r\n  handleScoreChange = (index, delta) => {\r\n    this.setState(prevState => {\r\n      // New 'players' array â€“ a copy of the previous `players` state\r\n      const updatedPlayers = [...prevState.players];\r\n      // A copy of the player object we're targeting\r\n      const updatedPlayer = { ...updatedPlayers[index] };\r\n\r\n      // Update the target player's score\r\n      updatedPlayer.score += delta;\r\n      // Update the 'players' array with the target player's latest score\r\n      updatedPlayers[index] = updatedPlayer;\r\n\r\n      // Update the `players` state without mutating the original state\r\n      return {\r\n        players: updatedPlayers\r\n      };\r\n    });\r\n  };\r\n\r\n  handleAddPlayer = name => {\r\n    this.setState(prevState => {\r\n      return {\r\n        players: [\r\n          ...prevState.players,\r\n          {\r\n            name,\r\n            score: 0,\r\n            id: (this.prevPlayerId += 1)\r\n          }\r\n        ]\r\n      };\r\n    });\r\n  };\r\n\r\n  handleRemovePlayer = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        players: prevState.players.filter(p => p.id !== id)\r\n      };\r\n    });\r\n  };\r\n\r\n  getHighScore = () => {\r\n    const scores = this.state.players.map(p => p.score);\r\n    const highScore = Math.max(...scores);\r\n    if (highScore) {\r\n      return highScore;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ScoreboardContext.Provider\r\n        value={{\r\n          players: this.state.players,\r\n          actions: {\r\n            changeScore: this.handleScoreChange,\r\n            removePlayer: this.handleRemovePlayer,\r\n            addPlayer: this.handleAddPlayer,\r\n            isHighScore: this.getHighScore()\r\n          }\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ScoreboardContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = ScoreboardContext.Consumer;\r\n","import React from \"react\";\nimport { Consumer } from \"./context\";\n\nconst Stats = () => {\n  return (\n    <Consumer>\n      {({ players }) => {\n        const totalPlayers = players.length;\n        const totalPoints = players.reduce((total, player) => {\n          return total + player.score;\n        }, 0);\n\n        return (\n          <table className=\"stats\">\n            <tbody>\n              <tr>\n                <td>Players:</td>\n                <td>{totalPlayers}</td>\n              </tr>\n              <tr>\n                <td>Total Points:</td>\n                <td>{totalPoints}</td>\n              </tr>\n            </tbody>\n          </table>\n        );\n      }}\n    </Consumer>\n  );\n};\n\nexport default Stats;\n","import React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0\n  };\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      this.setState( prevState => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\n      }));\n    }\n  }\n  \n  handleStopwatch = () => {\n    this.setState( prevState => ({\n      isRunning: !prevState.isRunning\n    }));\n    if (!this.state.isRunning) {\n      this.setState({ previousTime: Date.now() });\n    }\n  }\n\n  handleReset = () => {\n    this.setState({ elapsedTime: 0 });\n  }\n\n  render() {\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\n\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">{ seconds }</span>\n        <button onClick={this.handleStopwatch}>\n          { this.state.isRunning ? 'Stop' : 'Start' }\n        </button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Stats from \"./Stats\";\nimport Stopwatch from \"./Stopwatch\";\n\nconst Header = () => {\n  return (\n    <header>\n      <Stats />\n      <h1>Scoreboard</h1>\n      <Stopwatch />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  players: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nHeader.defaultProps = {\n  title: \"Scoreboard\"\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Consumer } from \"./context\";\nimport PropTypes from \"prop-types\";\n\nconst Counter = ({ index }) => {\n  return (\n    <Consumer>\n      {({ actions, players }) => (\n        <div className=\"counter\">\n          <button\n            className=\"counter-action decrement\"\n            onClick={() => actions.changeScore(index, -1)}\n          >\n            {\" \"}\n            -{\" \"}\n          </button>\n          <span className=\"counter-score\">{players[index].score}</span>\n          <button\n            className=\"counter-action increment\"\n            onClick={() => actions.changeScore(index, 1)}\n          >\n            {\" \"}\n            +{\" \"}\n          </button>\n        </div>\n      )}\n    </Consumer>\n  );\n};\n\nCounter.propTypes = {\n  index: PropTypes.number,\n  score: PropTypes.number,\n  changeScore: PropTypes.func\n};\n\nexport default Counter;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Icon = (props) =>\n  <svg viewBox=\"0 0 44 35\" className={ props.isHighScore ? 'is-high-score' : null }>\n    <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\n    <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\n  </svg>;\n\nIcon.propTypes = {\n  isHighScore: PropTypes.bool\n};\n\nexport default Icon;","import React, { PureComponent } from \"react\";\nimport { Consumer } from \"./context\";\nimport PropTypes from \"prop-types\";\nimport Counter from \"./Counter\";\nimport Icon from \"./Icon\";\n\nclass Player extends PureComponent {\n  static propTypes = {\n    index: PropTypes.number.isRequired\n  };\n\n  render() {\n    const { index } = this.props;\n\n    return (\n      <div className=\"player\">\n        <Consumer>\n          {({ actions, players }) => (\n            <span className=\"player-name\">\n              <button\n                className=\"remove-player\"\n                onClick={() => actions.removePlayer(players[index].id)}\n              >\n                âœ–\n              </button>\n\n              <Icon isHighScore={this.props.isHighScore} />\n              {players[index].name}\n            </span>\n          )}\n        </Consumer>\n\n        <Counter index={index} />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Fragment } from \"react\";\r\nimport { Consumer } from \"./context\";\r\nimport Player from \"./Player\";\r\n\r\nconst PlayerList = () => {\r\n  return (\r\n    <Consumer>\r\n      {({ players, actions }) => {\r\n        const highScore = actions.isHighScore;\r\n\r\n        return (\r\n          <Fragment>\r\n            {players.map((player, index) => (\r\n              <Player\r\n                key={player.id.toString()}\r\n                index={index}\r\n                isHighScore={highScore === player.score}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        );\r\n      }}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default PlayerList;\r\n","import React from \"react\";\nimport { Consumer } from \"./context\";\n\nconst AddPlayerForm = () => {\n  const playerInput = React.createRef();\n\n  return (\n    <Consumer>\n      {({ actions }) => {\n        const handleSubmit = e => {\n          e.preventDefault();\n          actions.addPlayer(playerInput.current.value);\n          e.currentTarget.reset();\n        };\n\n        return (\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              ref={playerInput}\n              placeholder=\"Enter a player's name\"\n            />\n            <input type=\"submit\" value=\"Add Player\" />\n          </form>\n        );\n      }}\n    </Consumer>\n  );\n};\n\nexport default AddPlayerForm;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport PlayerList from \"./PlayersList\";\nimport AddPlayerForm from \"./AddPlayerForm\";\n\nconst App = () => {\n  return (\n    <div className=\"scoreboard\">\n      <Header />\n      <PlayerList />\n      <AddPlayerForm />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Provider } from \"./components/context\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}